#!/usr/bin/env python3
"""
    File name: calculatesMeanDepth.py
    Author: Mariane Cote
    Date created: 02/26/2019
    Python Version: 3.6

    calculates the mean depth for each lake of the lake's list using the bathymetry modelized  and
        adds a column with those values into the CSV file.
"""

import pandas as pd
from lakes import run_mylakeGoran

models = {1: ('ICHEC-EC-EARTH', 'r1i1p1_KNMI-RACMO22E_v1_day'),
          2: ('ICHEC-EC-EARTH', 'r3i1p1_DMI-HIRHAM5_v1_day'),
          3: ('MPI-M-MPI-ESM-LR', 'r1i1p1_CLMcom-CCLM4-8-17_v1_day'),
          4: ('MOHC-HadGEM2-ES', 'r1i1p1_SMHI-RCA4_v1_day'),
          5: ('IPSL-IPSL-CM5A-MR', 'r1i1p1_IPSL-INERIS-WRF331F_v1_day'),
          6: ('CNRM-CERFACS-CNRM-CM5', 'r1i1p1_CLMcom-CCLM4-8-17_v1_day')}
scenarios = {1: ('historical', 1971, 'historical', 1976),
             2: ('historical', 2001, 'rcp45', 2006),
             3: ('rcp45', 2031, 'rcp45', 2036),
             4: ('rcp45', 2061, 'rcp45', 2066),
             5: ('rcp45', 2091, 'rcp45', 2096),
             6: ('rcp85', 2031, 'rcp85', 2036),
             7: ('rcp85', 2061, 'rcp85', 2066),
             8: ('rcp85', 2091, 'rcp85', 2096)}

cordexfolder = 'G:\cordex' #5-24-2018 MC # needs to be changed depending where the meteorological files are.
# The website for the meteorological variables generated by the combination of model-scenario:
# 'http://ns2806k.web.sigma2.no/'  # website updated: 5-9-2018 MC
import os
inflowfolder = '../sweden_inflow_data' #5-9-2018 MC
outputfolder = 'output'
scenarioid,modelid = 2,2
exA, y1A, exB, y1B = scenarios[scenarioid]
m1, m2 = models[modelid]
csvf = r'2017SwedenList.csv'


datafile = pd.read_csv(csvf, encoding="ISO-8859-1")
datafile['Mean_calculated'] = 0.0
with open(csvf, 'r') as file:
    lines = file.readlines ()
    nlines = len ( lines )
    ii = range ( 1, nlines )
    for line in ii:
        y2A = y1A + 4
        y2B = y1B + 4
        lake_id, subid, name, eh, area, depth, longitude, latitude, volume, mean_depth,aire \
            = lines[line].strip ().split ( ',' )
        eh = eh[2:] if eh[:2] == '0x' else eh
        while len ( eh ) < 6:
            eh = '0' + eh
        d1, d2, d3 = eh[:2], eh[:4], eh[:6]

        initp =  '2017init.txt'
        run_mylakeGoran.mylakeinit ( float(depth), float(area), initp)
        with open ( initp, 'r' ) as input:

            linesbathy = input.readlines()
            nlinesbathy = len ( linesbathy )
            iib = range ( 4, nlinesbathy )
            for ib in iib:
                bathy = linesbathy[ib].split("	")
                if ib == 4:
                    areaMax = float(bathy[1])
                    areax_1 = areaMax
                    mean = 0.0
                elif ib == 5:

                else:
                    depthx = float(bathy[0])
                    areax = float(bathy[1])
                    mean = mean + depthx*((areax_1-areax)/areaMax)
                    areax_1 = areax

            datafile.at[line-1,'Mean_calculated'] = mean
datafile.to_csv(r'2017SwedenList1.csv',index=False,encoding="ISO-8859-1")






