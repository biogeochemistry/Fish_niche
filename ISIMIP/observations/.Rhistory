# check if file has .xls or .csv extension
if ((length(fext)!=0) && (fext=="xlsx")) {
bathy = read.xlsx(fname,1,header = TRUE, stringsAsFactors = F)
} else if ((length(fext)!=0) && (fext!="xlsx")) {
bathy = read.csv(fname,sep = ',',header = TRUE, stringsAsFactors = F)
}
# *** FORMAT CHECK ***
# reads the file from given directory
# checks if headers
# T = colnames(bathy) == hypsoh
# for (j in 1:sum(T)) {
#   if (T[j]!=TRUE) {
#
#   }
# }
# checks if all rows have the same site id
if (length(unique(bathy$SITE_ID)) != 1) {
hypso[i,3] = 1
}
# checks if all rows have the same site name
if (length(unique(bathy$SITE_NAME)) != 1) {
hypso[i,4] = 1
}
# replace with a uniform name
bathy$SITE_ID = lakeList$lakeID[(lakeList$Lake.Short.Name == bathy$SITE_NAME[1])]
# checks if depth and bathymerty area have the same number of rows
if (sum(NROW(bathy$DEPTH) == NROW(bathy$BATHYMETRY_AREA)) != 1) {
hypso[i,5] = 1
}
# sort by ascending depths
bathy = bathy[with(bathy, order(bathy$DEPTH)), ]
# checks if depth increases (0 depth is first)
if (is.unsorted(bathy$DEPTH) == TRUE) { # false indicates that values increase
hypso[i,6] = 1
}
# checks if bathymerty area decreases with depth
if (is.unsorted(bathy$BATHYMETRY_AREA) == FALSE) { # true indicates that values decrease
hypso[i,7] = 1
}
# change to ISIMIP format
if (sum(as.numeric(hypso[i,3:7])) == 0) {
bathyOut  = data.frame("SITE_ID" = bathy$SITE_ID, "SITE_NAME" = bathy$SITE_NAME,
"DEPTH" = bathy$DEPTH, "BATHYMETRY_AREA" = bathy$BATHYMETRY_AREA)
}
# create directory with a lake data
dir.create(paste(outdir,lakename[i],sep = '/'))
# plot depth vs bathymetr
figName = paste(outdir,lakename[i],"bathymetry.png",sep = "/")
if (file.exists(figName)) stop(File, " already exists")
dir.create(dirname(figName), showWarnings = FALSE)
png(figName)
plot(bathyOut$DEPTH,bathyOut$BATHYMETRY_AREA)
dev.off()
# save to a new directory
# clear vars except directories
toKeep = c("wdir","fdir","fdir2","outdir","lakeList","dname","lakename","dirname","nRows","hypso","hypsoh")
rm(list=setdiff(ls(),toKeep))
}
i
print(dirname[i])
fname = list.files(dirname[i],pattern = "hypso(.*)",ignore.case = TRUE)
fname2 = list.files(dirname[i],pattern = "bathy(.*)",ignore.case = TRUE)
if (length(fname)!=0){
hypso[i,1] = dirname[i]
hypso[i,2] = 1 # inicates that file exists
} else if (length(fname2)!=0){
hypso[i,1] = dirname[i]
hypso[i,2] = 1
} else {
hypso[i,1] = dirname[i]
}
fext = file_ext(fname)
fext2 = file_ext(fname2)
fname = paste(dirname[i],fname,sep = "/")
fname2 = paste(dirname[i],fname2,sep = "/")
# check if file has .xls or .csv extension
if ((length(fext)!=0) && (fext=="xlsx")) {
bathy = read.xlsx(fname,1,header = TRUE, stringsAsFactors = F)
} else if ((length(fext)!=0) && (fext!="xlsx")) {
bathy = read.csv(fname,sep = ',',header = TRUE, stringsAsFactors = F)
}
# checks if all rows have the same site id
if (length(unique(bathy$SITE_ID)) != 1) {
hypso[i,3] = 1
}
if (length(unique(bathy$SITE_NAME)) != 1) {
hypso[i,4] = 1
}
bathy$SITE_ID = lakeList$lakeID[(lakeList$Lake.Short.Name == bathy$SITE_NAME[1])]
bathy$SITE_ID
bathy$SITE_NAME[1]
lakeList$Lake.Short.Nam
bathy$SITE_ID
dirname[i]
lakeList
lakename
lakename[i]
bathy$SITE_NAME[1]
(lakeList$Lake.Short.Name == lakename[1])
lakeList$lakeID[(lakeList$Lake.Short.Name == lakename[1])]
lakeList$lakeID[(lakeList$Lake.Short.Name == lakename[i])]
(lakeList$Lake.Short.Name == lakename[i])
lakeList$lakeID
lakename[i]
lakeList$Lake.Short.Name
strsplit(lakeList$Lake.Short.Name, " ")
as.character(strsplit(lakeList$Lake.Short.Name, " "))
# ---- LOAD DATA FROM DIRECTORIES ----
# load list of lakes
fName = paste(fdir2,'LakeList.csv',sep = "/")
lakeList = read.csv(fName,header = TRUE,stringsAsFactors = F, sep = ',')
lakeID = paste0(lakeList[,1],'-',lakeList[,2])
lakeID = data.frame(lakeID = substr(lakeID,1,6),stringsAsFactors = F)
# correct for lakes with the same abbreviations
lakeID[(lakeList$Lake.Short.Name == "CrystalBog"),1] = "US-CrB"
lakeID[(lakeList$Lake.Short.Name == "NohipaloMustjarv"),1] = "EE-NoM"
lakeID[(lakeList$Lake.Short.Name == "NohipaloValgejarv"),1] = "EE-NoV"
lakeID[(lakeList$Lake.Short.Name == "TroutBog"),1] = "US-TrB"
# merge
lakeList = cbind(lakeList,lakeID)
rm(lakeID)
# replace with a uniform name
# bathy$SITE_ID = lakeList$lakeID[(lakeList$Lake.Short.Name == bathy$SITE_NAME[1])]
bathy$SITE_ID = lakeList$lakeID[(lakeList$Lake.Short.Name == lakename[i])]
lakeList$Lake.Short.Name
as.character(strsplit(lakeList$Lake.Short.Name, " "))
i
# ----- HOUSE KEEPING -----
## House keeping
rm(list = ls())
# ----- LOAD LIBRARIES ----
library(tools) # id file extensions
#library(readxl) # reads excel files COMP CRUSHES
library(xlsx) # reads excel files
# ---- DIRECTORIES ----
wdir = setwd("C:/Users/malgo237/Dropbox/UUprojects/ISIMIP/LakeData") # later switch to server directory
fdir = "C:/Users/malgo237/Dropbox/UUprojects/ISIMIP"
fdir2 = "C:/Users/malgo237/Dropbox/UUprojects/ISIMIP/LakeData"
outdir = "C:/Users/malgo237/Dropbox/UUprojects/ISIMIP/LakeDataTest"
# ---- LOAD DATA FROM DIRECTORIES ----
# load list of lakes
fName = paste(fdir2,'LakeList.csv',sep = "/")
lakeList = read.csv(fName,header = TRUE,stringsAsFactors = F, sep = ',')
lakeID = paste0(lakeList[,1],'-',lakeList[,2])
lakeID = data.frame(lakeID = substr(lakeID,1,6),stringsAsFactors = F)
# correct for lakes with the same abbreviations
lakeID[(lakeList$Lake.Short.Name == "CrystalBog"),1] = "US-CrB"
lakeID[(lakeList$Lake.Short.Name == "NohipaloMustjarv"),1] = "EE-NoM"
lakeID[(lakeList$Lake.Short.Name == "NohipaloValgejarv"),1] = "EE-NoV"
lakeID[(lakeList$Lake.Short.Name == "TroutBog"),1] = "US-TrB"
# merge
lakeList = cbind(lakeList,lakeID)
rm(lakeID)
# !! https://www.masterdataanalysis.com/r/working-with-files-and-folders-in-r/
# list of lake-specific folders
dname = getwd()
#lakename = list.files(dname) # list of lakes and files in a given directory
# list.dirs(wdir) # all folders and subfolders
# setdiff(list.files(dname), list.dirs(recursive = FALSE, full.names = FALSE)) # excludes files
lakename = list.dirs(recursive = FALSE, full.names = FALSE) # only directories
dirname = paste(dname,lakename,sep = "/")
nRows = NROW(dirname)
## ---- CHECK HYPSOGRAPHY DATA ----
# if follows ISIMIP format
hypso = matrix(0,nRows,7) # file tracking if the file exists in a given directory
hypsoh = c("SITE_ID","SITE_NAME","DEPTH","BATHYMETRY_AREA") # headers of bathymerty files
for (i in 1:nRows) {
print(dirname[i])
# checks if bathymetry file exists
fname = list.files(dirname[i],pattern = "hypso(.*)",ignore.case = TRUE) # if file naming contain hypso expression
fname2 = list.files(dirname[i],pattern = "bathy(.*)",ignore.case = TRUE)
if (length(fname)!=0){
hypso[i,1] = dirname[i]
hypso[i,2] = 1 # inicates that file exists
} else if (length(fname2)!=0){
hypso[i,1] = dirname[i]
hypso[i,2] = 1
} else {
hypso[i,1] = dirname[i]
}
# identify file extensions
fext = file_ext(fname)
fext2 = file_ext(fname2)
fname = paste(dirname[i],fname,sep = "/")
fname2 = paste(dirname[i],fname2,sep = "/")
# check if file has .xls or .csv extension
if ((length(fext)!=0) && (fext=="xlsx")) {
bathy = read.xlsx(fname,1,header = TRUE, stringsAsFactors = F)
} else if ((length(fext)!=0) && (fext!="xlsx")) {
bathy = read.csv(fname,sep = ',',header = TRUE, stringsAsFactors = F)
}
# *** FORMAT CHECK ***
# reads the file from given directory
# checks if headers
# T = colnames(bathy) == hypsoh
# for (j in 1:sum(T)) {
#   if (T[j]!=TRUE) {
#
#   }
# }
# checks if all rows have the same site id
if (length(unique(bathy$SITE_ID)) != 1) {
hypso[i,3] = 1
}
# checks if all rows have the same site name
if (length(unique(bathy$SITE_NAME)) != 1) {
hypso[i,4] = 1
}
# replace with a uniform name
# bathy$SITE_ID = lakeList$lakeID[(lakeList$Lake.Short.Name == bathy$SITE_NAME[1])]
bathy$SITE_ID = lakeList$lakeID[(as.character(strsplit(lakeList$Lake.Short.Name, " ")) == lakename[i])]
# checks if depth and bathymerty area have the same number of rows
if (sum(NROW(bathy$DEPTH) == NROW(bathy$BATHYMETRY_AREA)) != 1) {
hypso[i,5] = 1
}
# sort by ascending depths
bathy = bathy[with(bathy, order(bathy$DEPTH)), ]
# checks if depth increases (0 depth is first)
if (is.unsorted(bathy$DEPTH) == TRUE) { # false indicates that values increase
hypso[i,6] = 1
}
# checks if bathymerty area decreases with depth
if (is.unsorted(bathy$BATHYMETRY_AREA) == FALSE) { # true indicates that values decrease
hypso[i,7] = 1
}
# change to ISIMIP format
if (sum(as.numeric(hypso[i,3:7])) == 0) {
bathyOut  = data.frame("SITE_ID" = bathy$SITE_ID, "SITE_NAME" = bathy$SITE_NAME,
"DEPTH" = bathy$DEPTH, "BATHYMETRY_AREA" = bathy$BATHYMETRY_AREA)
}
# create directory with a lake data
dir.create(paste(outdir,lakename[i],sep = '/'))
# plot depth vs bathymetr
figName = paste(outdir,lakename[i],"bathymetry.png",sep = "/")
if (file.exists(figName)) stop(File, " already exists")
dir.create(dirname(figName), showWarnings = FALSE)
png(figName)
plot(bathyOut$DEPTH,bathyOut$BATHYMETRY_AREA)
dev.off()
# save to a new directory
# clear vars except directories
toKeep = c("wdir","fdir","fdir2","outdir","lakeList","dname","lakename","dirname","nRows","hypso","hypsoh")
rm(list=setdiff(ls(),toKeep))
}
dir.exists(paste(outdir, lakename[i], sep = "/"))
(dir.exists(paste(outdir, lakename[i], sep = "/")) != T)
if (dir.exists(paste(outdir, lakename[i], sep = "/")) != T) {
dir.create(paste(outdir,lakename[i],sep = '/'))
}
for (i in 1:nRows) {
print(dirname[i])
# checks if bathymetry file exists
fname = list.files(dirname[i],pattern = "hypso(.*)",ignore.case = TRUE) # if file naming contain hypso expression
fname2 = list.files(dirname[i],pattern = "bathy(.*)",ignore.case = TRUE)
if (length(fname)!=0){
hypso[i,1] = dirname[i]
hypso[i,2] = 1 # inicates that file exists
} else if (length(fname2)!=0){
hypso[i,1] = dirname[i]
hypso[i,2] = 1
} else {
hypso[i,1] = dirname[i]
}
# identify file extensions
fext = file_ext(fname)
fext2 = file_ext(fname2)
fname = paste(dirname[i],fname,sep = "/")
fname2 = paste(dirname[i],fname2,sep = "/")
# check if file has .xls or .csv extension
if ((length(fext)!=0) && (fext=="xlsx")) {
bathy = read.xlsx(fname,1,header = TRUE, stringsAsFactors = F)
} else if ((length(fext)!=0) && (fext!="xlsx")) {
bathy = read.csv(fname,sep = ',',header = TRUE, stringsAsFactors = F)
}
# *** FORMAT CHECK ***
# reads the file from given directory
# checks if headers
# T = colnames(bathy) == hypsoh
# for (j in 1:sum(T)) {
#   if (T[j]!=TRUE) {
#
#   }
# }
# checks if all rows have the same site id
if (length(unique(bathy$SITE_ID)) != 1) {
hypso[i,3] = 1
}
# checks if all rows have the same site name
if (length(unique(bathy$SITE_NAME)) != 1) {
hypso[i,4] = 1
}
# replace with a uniform name
# bathy$SITE_ID = lakeList$lakeID[(lakeList$Lake.Short.Name == bathy$SITE_NAME[1])]
bathy$SITE_ID = lakeList$lakeID[(as.character(strsplit(lakeList$Lake.Short.Name, " ")) == lakename[i])]
# checks if depth and bathymerty area have the same number of rows
if (sum(NROW(bathy$DEPTH) == NROW(bathy$BATHYMETRY_AREA)) != 1) {
hypso[i,5] = 1
}
# sort by ascending depths
bathy = bathy[with(bathy, order(bathy$DEPTH)), ]
# checks if depth increases (0 depth is first)
if (is.unsorted(bathy$DEPTH) == TRUE) { # false indicates that values increase
hypso[i,6] = 1
}
# checks if bathymerty area decreases with depth
if (is.unsorted(bathy$BATHYMETRY_AREA) == FALSE) { # true indicates that values decrease
hypso[i,7] = 1
}
# change to ISIMIP format
if (sum(as.numeric(hypso[i,3:7])) == 0) {
bathyOut  = data.frame("SITE_ID" = bathy$SITE_ID, "SITE_NAME" = bathy$SITE_NAME,
"DEPTH" = bathy$DEPTH, "BATHYMETRY_AREA" = bathy$BATHYMETRY_AREA)
}
# create directory with a lake data
if (dir.exists(paste(outdir, lakename[i], sep = "/")) != T) {
dir.create(paste(outdir,lakename[i],sep = '/'))
}
# plot depth vs bathymetr
figName = paste(outdir,lakename[i],"bathymetry.png",sep = "/")
if (file.exists(figName)) stop(File, " already exists")
dir.create(dirname(figName), showWarnings = FALSE)
png(figName)
plot(bathyOut$DEPTH,bathyOut$BATHYMETRY_AREA)
dev.off()
# save to a new directory
# clear vars except directories
toKeep = c("wdir","fdir","fdir2","outdir","lakeList","dname","lakename","dirname","nRows","hypso","hypsoh")
rm(list=setdiff(ls(),toKeep))
}
dir.exists(paste(outdir, lakename[i], sep = "/")
dir.exists(paste(outdir, lakename[i], sep = "/"))
(dir.exists(paste(outdir, lakename[i], sep = "/")) != T)
# create directory with a lake data
if (dir.exists(paste(outdir, lakename[i], sep = "/")) != T) {
dir.create(paste(outdir,lakename[i],sep = '/'))
}
figName = paste(outdir,lakename[i],"bathymetry.png",sep = "/")
if (file.exists(figName)) stop(File, " already exists")
dir.create(dirname(figName), showWarnings = FALSE)
png(figName)
plot(bathyOut$DEPTH,bathyOut$BATHYMETRY_AREA)
dev.off()
outdir
lakename[i]
paste(lakename[i],"bathymetry.png")
paste0(lakename[i],"bathymetry.png")
paste0(lakename[i],"_bathymetry.png")
paste(outdir,lakename[i],paste0(lakename[i],"_bathymetry.png"),sep = "/")
dir.create(dirname(figName), showWarnings = FALSE)
dirname(figName)
i
rm(list = ls())
# ----- LOAD LIBRARIES ----
library(tools) # id file extensions
#library(readxl) # reads excel files COMP CRUSHES
library(xlsx) # reads excel files
# ---- DIRECTORIES ----
wdir = setwd("C:/Users/malgo237/Dropbox/UUprojects/ISIMIP/LakeData") # later switch to server directory
fdir = "C:/Users/malgo237/Dropbox/UUprojects/ISIMIP"
fdir2 = "C:/Users/malgo237/Dropbox/UUprojects/ISIMIP/LakeData"
outdir = "C:/Users/malgo237/Dropbox/UUprojects/ISIMIP/LakeDataTest"
# ---- LOAD DATA FROM DIRECTORIES ----
# load list of lakes
fName = paste(fdir2,'LakeList.csv',sep = "/")
lakeList = read.csv(fName,header = TRUE,stringsAsFactors = F, sep = ',')
lakeID = paste0(lakeList[,1],'-',lakeList[,2])
lakeID = data.frame(lakeID = substr(lakeID,1,6),stringsAsFactors = F)
# correct for lakes with the same abbreviations
lakeID[(lakeList$Lake.Short.Name == "CrystalBog"),1] = "US-CrB"
lakeID[(lakeList$Lake.Short.Name == "NohipaloMustjarv"),1] = "EE-NoM"
lakeID[(lakeList$Lake.Short.Name == "NohipaloValgejarv"),1] = "EE-NoV"
lakeID[(lakeList$Lake.Short.Name == "TroutBog"),1] = "US-TrB"
# merge
lakeList = cbind(lakeList,lakeID)
rm(lakeID)
# !! https://www.masterdataanalysis.com/r/working-with-files-and-folders-in-r/
# list of lake-specific folders
dname = getwd()
#lakename = list.files(dname) # list of lakes and files in a given directory
# list.dirs(wdir) # all folders and subfolders
# setdiff(list.files(dname), list.dirs(recursive = FALSE, full.names = FALSE)) # excludes files
lakename = list.dirs(recursive = FALSE, full.names = FALSE) # only directories
dirname = paste(dname,lakename,sep = "/")
nRows = NROW(dirname)
## ---- CHECK HYPSOGRAPHY DATA ----
# if follows ISIMIP format
hypso = matrix(0,nRows,7) # file tracking if the file exists in a given directory
hypsoh = c("SITE_ID","SITE_NAME","DEPTH","BATHYMETRY_AREA") # headers of bathymerty files
for (i in 1:nRows) {
print(dirname[i])
# checks if bathymetry file exists
fname = list.files(dirname[i],pattern = "hypso(.*)",ignore.case = TRUE) # if file naming contain hypso expression
fname2 = list.files(dirname[i],pattern = "bathy(.*)",ignore.case = TRUE)
if (length(fname)!=0){
hypso[i,1] = dirname[i]
hypso[i,2] = 1 # inicates that file exists
} else if (length(fname2)!=0){
hypso[i,1] = dirname[i]
hypso[i,2] = 1
} else {
hypso[i,1] = dirname[i]
}
# identify file extensions
fext = file_ext(fname)
fext2 = file_ext(fname2)
fname = paste(dirname[i],fname,sep = "/")
fname2 = paste(dirname[i],fname2,sep = "/")
# check if file has .xls or .csv extension
if ((length(fext)!=0) && (fext=="xlsx")) {
bathy = read.xlsx(fname,1,header = TRUE, stringsAsFactors = F)
} else if ((length(fext)!=0) && (fext!="xlsx")) {
bathy = read.csv(fname,sep = ',',header = TRUE, stringsAsFactors = F)
}
# *** FORMAT CHECK ***
# reads the file from given directory
# checks if headers
# T = colnames(bathy) == hypsoh
# for (j in 1:sum(T)) {
#   if (T[j]!=TRUE) {
#
#   }
# }
# checks if all rows have the same site id
if (length(unique(bathy$SITE_ID)) != 1) {
hypso[i,3] = 1
}
# checks if all rows have the same site name
if (length(unique(bathy$SITE_NAME)) != 1) {
hypso[i,4] = 1
}
# replace with a uniform name
# bathy$SITE_ID = lakeList$lakeID[(lakeList$Lake.Short.Name == bathy$SITE_NAME[1])]
bathy$SITE_ID = lakeList$lakeID[(as.character(strsplit(lakeList$Lake.Short.Name, " ")) == lakename[i])]
# checks if depth and bathymerty area have the same number of rows
if (sum(NROW(bathy$DEPTH) == NROW(bathy$BATHYMETRY_AREA)) != 1) {
hypso[i,5] = 1
}
# sort by ascending depths
bathy = bathy[with(bathy, order(bathy$DEPTH)), ]
# checks if depth increases (0 depth is first)
if (is.unsorted(bathy$DEPTH) == TRUE) { # false indicates that values increase
hypso[i,6] = 1
}
# checks if bathymerty area decreases with depth
if (is.unsorted(bathy$BATHYMETRY_AREA) == FALSE) { # true indicates that values decrease
hypso[i,7] = 1
}
# change to ISIMIP format
if (sum(as.numeric(hypso[i,3:7])) == 0) {
bathyOut  = data.frame("SITE_ID" = bathy$SITE_ID, "SITE_NAME" = bathy$SITE_NAME,
"DEPTH" = bathy$DEPTH, "BATHYMETRY_AREA" = bathy$BATHYMETRY_AREA)
}
# create directory with a lake data
if (dir.exists(paste(outdir, lakename[i], sep = "/")) != T) {
dir.create(paste(outdir,lakename[i],sep = '/'))
}
# plot depth vs bathymetr
figName = paste(outdir,lakename[i],paste0(lakename[i],"_bathymetry.png"),sep = "/")
if (file.exists(figName)) stop(File, " already exists")
dir.create(dirname(figName), showWarnings = FALSE)
png(figName)
plot(bathyOut$DEPTH,bathyOut$BATHYMETRY_AREA)
dev.off()
# save to a new directory
# clear vars except directories
toKeep = c("wdir","fdir","fdir2","outdir","lakeList","dname","lakename","dirname","nRows","hypso","hypsoh")
rm(list=setdiff(ls(),toKeep))
}
bathy$DEPTH
i
dirname[i]
if (is.unsorted(bathy$DEPTH) == TRUE) { # false indicates that values increase
hypso[i,6] = 1
}
is.unsorted(bathy$DEPTH)
bathy$DEPTH
plot(bathy$DEPTH)
plot(bathy$BATHYMETRY_AREA)
View(bathy)
is.unsorted(bathy$DEPTH)
bathy$DEPTH
nRows
bathy[nRows,]
bathy[length(bathy),]
toKeep = c("wdir","fdir","fdir2","outdir","lakeList","dname","lakename","dirname","nRows","hypso","hypsoh")
rm(list=setdiff(ls(),toKeep))
print(dirname[i])
i = 21
print(dirname[i])
fname = list.files(dirname[i],pattern = "hypso(.*)",ignore.case = TRUE) # if file naming contain hypso expression
fname2 = list.files(dirname[i],pattern = "bathy(.*)",ignore.case = TRUE)
if (length(fname)!=0){
hypso[i,1] = dirname[i]
hypso[i,2] = 1 # inicates that file exists
} else if (length(fname2)!=0){
hypso[i,1] = dirname[i]
hypso[i,2] = 1
} else {
hypso[i,1] = dirname[i]
}
fext = file_ext(fname)
fext2 = file_ext(fname2)
fname = paste(dirname[i],fname,sep = "/")
fname2 = paste(dirname[i],fname2,sep = "/")
# check if file has .xls or .csv extension
if ((length(fext)!=0) && (fext=="xlsx")) {
bathy = read.xlsx(fname,1,header = TRUE, stringsAsFactors = F)
} else if ((length(fext)!=0) && (fext!="xlsx")) {
bathy = read.csv(fname,sep = ',',header = TRUE, stringsAsFactors = F)
}
View(bathy)
rm(list = ls())
